{"version":3,"sources":["components/Main.jsx","actions/actions.js","services/countries.js","components/Login.jsx","services/api.js","components/Counter.jsx","components/LeaderBoard.jsx","App.jsx","serviceWorker.js","store/Reducer.js","store/index.js","index.jsx"],"names":["Main","props","state","answer","points","left","right","operator","timer","mainTimer","borderStyle","this","generateQuestion","setInterval","goToLeaderBoard","saveScore","player","countryCode","setState","style","border","onKeyDown","e","keyCode","changeScore","onChange","target","value","Number","Math","floor","random","aux","className","Date","toISOString","substr","undoLogin","src","alt","renderMainTimer","renderPoits","renderQuestion","answerInput","renderTimer","onClick","type","React","Component","connect","dispatch","countryList","Login","country","buttonEnabled","doLogin","getPlayerInfo","fetch","then","data","json","getCountryCode","alpha2Code","map","disabled","savePlayerInfo","Counter","counter","clearInterval","startGame","setTimeout","LeaderBoard","leaderBoard","sort","a","b","playAgain","startNewPlayer","leaderBoardScores","App","login","main","startCounter","loginDone","mainScreen","Boolean","window","location","hostname","match","Reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aea8d477.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeLogin, showLeaderboard, saveScore } from '../actions/actions';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: '',\n      points: 0,\n      left: '',\n      right: '',\n      operator: '',\n      timer: 15,\n      mainTimer: 120,\n      borderStyle: 'black',\n    };\n  }\n\n  componentDidMount() {\n    this.generateQuestion();\n    setInterval(() => {\n      const { timer, mainTimer, points } = this.state;\n      const {\n        goToLeaderBoard, saveScore, player, countryCode,\n      } = this.props;\n      if (timer > 0) {\n        this.setState((state) => ({ mainTimer: state.mainTimer - 1, timer: state.timer - 1 }));\n      } else {\n        this.setState((state) => ({ mainTimer: state.mainTimer - 1, timer: 15 }));\n        this.generateQuestion();\n      }\n      if (mainTimer === 0) {\n        goToLeaderBoard();\n        saveScore(player, countryCode, points);\n      }\n    }, 1000);\n  }\n\n  answerInput() {\n    const { answer, borderStyle } = this.state;\n    return (\n      <input\n        style={{ border: `3px solid ${borderStyle}` }}\n        onKeyDown={(e) => {\n          if (e.keyCode === 13) {\n            this.setState({ answer: '', timer: 15 });\n            this.changeScore();\n            this.generateQuestion();\n          }\n        }}\n        onChange={(e) => this.setState({ answer: e.target.value })}\n        value={answer}\n      />\n    );\n  }\n\n  changeScore() {\n    const {\n      answer, left, right, operator, timer,\n    } = this.state;\n    switch (operator) {\n      case 1: if (left * right === Number(answer)) {\n        this.setState((state) => ({ points: state.points + timer, borderStyle: 'green' }));\n      } else {\n        this.setState((state) => ({ points: state.points - timer, borderStyle: 'red' }));\n      } break;\n      case 2: if (left + right === Number(answer)) {\n        this.setState((state) => ({ points: state.points + timer, borderStyle: 'green' }));\n      } else {\n        this.setState((state) => ({ points: state.points - timer, borderStyle: 'red' }));\n      } break;\n      case 3: if (left / right === Number(answer)) {\n        this.setState((state) => ({ points: state.points + timer, borderStyle: 'green' }));\n      } else {\n        this.setState((state) => ({ points: state.points - timer, borderStyle: 'red' }));\n      } break;\n      default: if (left - right === Number(answer)) {\n        this.setState((state) => ({ points: state.points + timer, borderStyle: 'green' }));\n      } else {\n        this.setState((state) => ({ points: state.points - timer, borderStyle: 'red' }));\n      }\n    }\n  }\n\n  generateQuestion() {\n    const { points } = this.state;\n    const operator = Math.floor(Math.random() * 4);\n    let left;\n    let right;\n    if (points < 100) {\n      left = Math.floor(Math.random() * 10);\n      if (operator !== 3) {\n        right = Math.floor(Math.random() * 10);\n      } else {\n        let aux = Math.floor(Math.random() * 10);\n        while (left % aux !== 0) {\n          aux = Math.floor(Math.random() * 10);\n        }\n        right = aux;\n      }\n    } else if (points < 200) {\n      left = Math.floor(Math.random() * 100);\n      if (operator !== 3) {\n        right = Math.floor(Math.random() * 10);\n      } else {\n        while (left % right !== 0) {\n          right = Math.floor(Math.random() * 10);\n        }\n      }\n    } else if (points < 300) {\n      left = Math.floor(Math.random() * 100);\n      if (operator !== 3) {\n        right = Math.floor(Math.random() * 100);\n      } else {\n        while (left % right !== 0) {\n          right = Math.floor(Math.random() * 100);\n        }\n      }\n    } else if (points < 400) {\n      left = Math.floor(Math.random() * 1000);\n      if (operator !== 3) {\n        right = Math.floor(Math.random() * 100);\n      } else {\n        while (left % right !== 0) {\n          right = Math.floor(Math.random() * 100);\n        }\n      }\n    } else {\n      left = Math.floor(Math.random() * 1000);\n      if (operator !== 3) {\n        right = Math.floor(Math.random() * 1000);\n      } else {\n        while (left % right !== 0) {\n          right = Math.floor(Math.random() * 1000);\n        }\n      }\n    }\n    this.setState({ left, right, operator });\n  }\n\n  renderPoits() {\n    const { points } = this.state;\n    return (\n      <p>{`${points} points`}</p>\n    );\n  }\n\n  static renderQuestion(operator, left, right) {\n    switch (operator) {\n      case 1: return (<p>{`${left} x ${right}`}</p>);\n      case 2: return (<p>{`${left} + ${right}`}</p>);\n      case 3: return (<p>{`${left} ÷ ${right}`}</p>);\n      default: return (<p>{`${left} - ${right}`}</p>);\n    }\n  }\n\n  renderTimer() {\n    const { timer } = this.state;\n    return (\n      <p>{`${timer} s`}</p>\n    );\n  }\n\n  renderMainTimer() {\n    const { mainTimer } = this.state;\n    return (\n      <p className=\"main-timer\">{new Date(mainTimer * 1000).toISOString().substr(11, 8)}</p>\n    );\n  }\n\n  render() {\n    const {\n      left, right, operator, points,\n    } = this.state;\n    const {\n      undoLogin, player, countryCode, goToLeaderBoard, saveScore,\n    } = this.props;\n    return (\n      <div className=\"main-container\">\n        <div className=\"up-bar\">\n          <div className=\"player-info-main\">\n            <img src={`https://www.countryflags.io/${countryCode}/shiny/64.png`} alt=\"\" />\n            <p>{player}</p>\n          </div>\n          {this.renderMainTimer()}\n          {this.renderPoits()}\n        </div>\n        <div className=\"answer-area\">\n          {Main.renderQuestion(operator, left, right)}\n          {this.answerInput()}\n          {this.renderTimer()}\n        </div>\n        <div className=\"main-buttons\">\n          <button onClick={() => undoLogin()} type=\"button\">Start Over</button>\n          <button onClick={() => { goToLeaderBoard(); saveScore(player, countryCode, points); }} type=\"button\">Give Up</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  undoLogin: () => dispatch(removeLogin()),\n  goToLeaderBoard: () => dispatch(showLeaderboard()),\n  saveScore: (player, countryCode, points) => dispatch(saveScore(player, countryCode, points)),\n});\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n  countryCode: state.countryCode,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","const changeLogin = () => ({ type: 'CREATE USER' });\nconst removeLogin = () => ({ type: 'REMOVE LOGIN' });\nconst startGame = () => ({ type: 'START GAME' });\nconst savePlayerInfo = (player, countryCode) => ({ type: 'SAVE PLAYER INFO', player, countryCode });\nconst showLeaderboard = () => ({ type: 'SHOW LEADERBOARD' });\nconst playAgain = () => ({ type: 'PLAY AGAIN' });\nconst startNewPlayer = () => ({ type: 'NEW PLAYER' });\nconst saveScore = (player, countryCode, points) => ({\n  type: 'SAVE SCORE', player, countryCode, points,\n});\n\nexport {\n  changeLogin, removeLogin, savePlayerInfo, startGame, showLeaderboard, playAgain, startNewPlayer, saveScore,\n};\n","export const countryList = ['Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Anguilla', 'Antigua &amp; Barbuda', 'Argentina', 'Armenia', 'Aruba', 'Australia', 'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin', 'Bermuda', 'Bhutan', 'Bolivia', 'Bosnia &amp; Herzegovina', 'Botswana', 'Brazil', 'British Virgin Islands', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi', 'Cambodia', 'Cameroon', 'Cape Verde', 'Cayman Islands', 'Chad', 'Chile', 'China', 'Colombia', 'Congo', 'Cook Islands', 'Costa Rica', 'Cote D Ivoire', 'Croatia', 'Cruise Ship', 'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt', 'El Salvador', 'Equatorial Guinea', 'Estonia', 'Ethiopia', 'Falkland Islands', 'Faroe Islands', 'Fiji', 'Finland', 'France', 'French Polynesia', 'French West Indies', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Gibraltar', 'Greece', 'Greenland', 'Grenada', 'Guam', 'Guatemala', 'Guernsey', 'Guinea', 'Guinea Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Isle of Man', 'Israel', 'Italy', 'Jamaica', 'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Kuwait', 'Kyrgyz Republic', 'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Macau', 'Macedonia', 'Madagascar', 'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Mauritania', 'Mauritius', 'Mexico', 'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Montserrat', 'Morocco', 'Mozambique', 'Namibia', 'Nepal', 'Netherlands', 'Netherlands Antilles', 'New Caledonia', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'Norway', 'Oman', 'Pakistan', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines', 'Poland', 'Portugal', 'Puerto Rico', 'Qatar', 'Reunion', 'Romania', 'Russia', 'Rwanda', 'Saint Pierre &amp; Miquelon', 'Samoa', 'San Marino', 'Satellite', 'Saudi Arabia', 'Senegal', 'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'South Africa', 'South Korea', 'Spain', 'Sri Lanka', 'St Kitts &amp; Nevis', 'St Lucia', 'St Vincent', 'St. Lucia', 'Sudan', 'Suriname', 'Swaziland', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', \"Timor L'Este\", 'Togo', 'Tonga', 'Trinidad &amp; Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Turks &amp; Caicos', 'Uganda', 'Ukraine', 'United Arab Emirates', 'United Kingdom', 'Uruguay', 'Uzbekistan', 'Venezuela', 'Vietnam', 'Virgin Islands (US)', 'Yemen', 'Zambia', 'Zimbabwe'];\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getCountryCode } from '../services/api';\nimport { countryList } from '../services/countries';\nimport { changeLogin, savePlayerInfo } from '../actions/actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player: '',\n      country: 'Brazil',\n      countryCode: 'BR',\n      buttonEnabled: true,\n    };\n  }\n\n  render() {\n    const {\n      country, countryCode, player, buttonEnabled,\n    } = this.state;\n    const { doLogin, getPlayerInfo } = this.props;\n    return (\n      <div className=\"login-main\">\n        <div>\n          <h1>MATH GAME</h1>\n        </div>\n        <div className=\"player-info\">\n          <p>Your name:</p>\n          <input onKeyDown={(e) => { if (e.keyCode === 13) { doLogin(); getPlayerInfo(player, countryCode); } }} onChange={(e) => this.setState({ player: e.target.value, buttonEnabled: false })} value={player} />\n          <div className=\"country-selection\">\n            <p>Choose your country:</p>\n            <select\n              onChange={(e) => {\n                this.setState({ country: e.target.value });\n                getCountryCode(e.target.value).then((data) => this.setState({ countryCode: data[0].alpha2Code }));\n              }}\n              value={country}\n            >\n              {countryList.map((e) => <option>{e}</option>)}\n            </select>\n            <img src={`https://www.countryflags.io/${countryCode}/shiny/64.png`} alt=\"\" />\n          </div>\n          <button onClick={() => { doLogin(); getPlayerInfo(player, countryCode); }} disabled={buttonEnabled} type=\"button\">Start</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  doLogin: () => dispatch(changeLogin()),\n  getPlayerInfo: (player, countryCode) => { dispatch(savePlayerInfo(player, countryCode)); },\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","const getCountryCode = (country) => fetch(`https://restcountries.eu/rest/v2/name/${country}`)\n  .then((data) => data.json());\n\nexport { getCountryCode };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { startGame } from '../actions/actions';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 3,\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      const { counter } = this.state;\n      if (counter === 1) {\n        this.setState({ counter: 'GO!' });\n      } else if (counter === 'GO') {\n        clearInterval();\n      } else {\n        this.setState((state) => ({ counter: state.counter - 1 }));\n      }\n    }, 1000);\n  }\n\n  render() {\n    const { counter } = this.state;\n    const { startGame } = this.props;\n    if (counter === 'GO!') {\n      setTimeout(() => { this.setState({ counter: 3 }); startGame(); }, 1000);\n    }\n    return (\n      <div className=\"counter-container\">\n        <p className=\"counter scale-up-center\">{counter}</p>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  startGame: () => dispatch(startGame()),\n});\n\nexport default connect(null, mapDispatchToProps)(Counter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { playAgain, startNewPlayer } from '../actions/actions';\n\nclass LeaderBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leaderBoard: [],\n    };\n  }\n\n  componentDidMount() {\n    const { leaderBoard } = this.props;\n    leaderBoard.sort((a, b) => {\n      if (a.points > b.points) return -1;\n      if (a.points < b.points) return 1;\n      return 0;\n    });\n    this.setState({ leaderBoard });\n  }\n\n  render() {\n    const { playAgain, startNewPlayer } = this.props;\n    const { leaderBoard } = this.state;\n    return (\n      <div className=\"leaderboard\">\n        <h1>Leader Board</h1>\n        <div className=\"all-scores\">\n          {leaderBoard.map((e) => (\n            <div className=\"player-info-leaderboard\">\n              <div className=\"in-line\">\n                <div>\n                  <img src={`https://www.countryflags.io/${e.countryCode}/shiny/64.png`} alt=\"\" />\n                  <span>{e.player}</span>\n                </div>\n                {(e.player !== '') && <span>{`${e.points} points`}</span>}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"leaderboard-buttons\">\n          <button onClick={() => playAgain()}>Play Again</button>\n          <button onClick={() => startNewPlayer()}>New Player</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  leaderBoard: state.leaderBoardScores,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  playAgain: () => dispatch(playAgain()),\n  startNewPlayer: () => dispatch(startNewPlayer()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeaderBoard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Main from './components/Main';\nimport Login from './components/Login';\nimport './App.css';\nimport Counter from './components/Counter';\nimport LeaderBoard from './components/LeaderBoard';\n\nclass App extends React.Component {\n  render() {\n    const { login, main, startCounter, leaderBoard } = this.props;\n    return (\n      <div className=\"game-main\">\n        {login && <Login />}\n        {startCounter && <Counter />}\n        {main && <Main />}\n        {leaderBoard && <LeaderBoard />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  login: state.loginDone,\n  main: state.mainScreen,\n  startCounter: state.startCounter,\n  leaderBoard: state.leaderBoard,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const Reducer = (state = {\n  loginDone: true, mainScreen: false, startCounter: false, leaderBoard: false, player: '', countryCode: '', leaderBoardScores: [{ player: '', countryCode: '', points: '' }],\n}, action) => {\n  switch (action.type) {\n    case 'CREATE USER': return { ...state, loginDone: false, startCounter: true };\n    case 'START GAME': return { ...state, startCounter: false, mainScreen: true };\n    case 'SHOW LEADERBOARD': return { ...state, mainScreen: false, leaderBoard: true };\n    case 'REMOVE LOGIN': return { ...state, startCounter: true, mainScreen: false };\n    case 'PLAY AGAIN': return { ...state, leaderBoard: false, startCounter: true };\n    case 'NEW PLAYER': return { ...state, leaderBoard: false, loginDone: true };\n    case 'SAVE PLAYER INFO': return { ...state, player: action.player, countryCode: action.countryCode };\n    case 'SAVE SCORE': return { ...state, leaderBoardScores: [...state.leaderBoardScores, { player: action.player, countryCode: action.countryCode, points: action.points }] };\n    default: return state;\n  }\n};\n\nexport default Reducer;\n","import { createStore } from 'redux';\nimport Reducer from './Reducer';\n\nconst store = createStore(Reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}